# -*- coding: utf-8 -*-

"""
/***************************************************************************
 Gobs
                                 A QGIS plugin
 This plugin provides tools to store and manage spatial and time data in a standardized way
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2019-02-15
        copyright            : (C) 2019 by 3liz
        email                : info@3liz.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = '3liz'
__date__ = '2019-02-15'
__copyright__ = '(C) 2019 by 3liz'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

from qgis.core import QgsProcessingProvider
from .algorithms.configure_plugin import ConfigurePlugin
from .algorithms.execute_sql_on_service import ExecuteSqlOnService
from .algorithms.create_database_structure import CreateDatabaseStructure
from .algorithms.upgrade_database_structure import UpgradeDatabaseStructure
from .algorithms.import_spatial_layer_data import ImportSpatialLayerData
# from .algorithms.import_observation_data import ImportObservationData
from .algorithms.get_spatial_layer_vector_data import GetSpatialLayerVectorData
from .algorithms.get_series_data import GetSeriesData
from .algorithms.get_series_list import GetSeriesList
from .algorithms.get_aggregated_data import GetAggregatedData

from qgis.core import (
    QgsExpressionContextUtils
)

class GobsProvider(QgsProcessingProvider):

    def unload(self):
        """
        Unloads the provider. Any tear-down steps required by the provider
        should be implemented here.
        """
        QgsExpressionContextUtils.setGlobalVariable('gobs_get_database_data', 'no')
        pass

    def loadAlgorithms(self):

        # Add flag used by initAlgorithm method of algs
        # so that they do not get data from database to fill in their combo boxes
        QgsExpressionContextUtils.setGlobalVariable('gobs_get_database_data', 'no')

        self.addAlgorithm( ConfigurePlugin() )
        self.addAlgorithm( ExecuteSqlOnService() )
        self.addAlgorithm( CreateDatabaseStructure() )
        self.addAlgorithm( UpgradeDatabaseStructure() )

        # not imported because used as parent alg
        # self.addAlgorithm( ImportObservationData() )
        self.addAlgorithm( ImportSpatialLayerData() )
        # self.addAlgorithm( GetDataAsLayer() ) # no need, because not used directly
        self.addAlgorithm( GetSpatialLayerVectorData() )
        self.addAlgorithm( GetSeriesData() )
        self.addAlgorithm( GetSeriesList() )
        self.addAlgorithm( GetAggregatedData() )

        # Put the flag back to yes
        QgsExpressionContextUtils.setGlobalVariable('gobs_get_database_data', 'yes')

    def id(self):
        return 'gobs'

    def name(self):
        return self.tr('G-Obs')

    def longName(self):
        return self.tr('G-Obs')
