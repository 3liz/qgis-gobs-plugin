<?xml version="1.0" encoding="UTF-8"?><database name="gis" schema="gobs" type="PostgreSQL - 13.14 (Debian 13.14-1.pgdg110+2)">
   <sequences>
      <sequence increment="1" name="actor_category_id_seq" startValue="1"/>
      <sequence increment="1" name="actor_id_seq" startValue="1"/>
      <sequence increment="1" name="dimension_id_seq" startValue="1"/>
      <sequence increment="1" name="document_id_seq" startValue="1"/>
      <sequence increment="1" name="glossary_id_seq" startValue="1"/>
      <sequence increment="1" name="graph_node_id_seq" startValue="1"/>
      <sequence increment="1" name="import_id_seq" startValue="1"/>
      <sequence increment="1" name="indicator_id_seq" startValue="1"/>
      <sequence increment="1" name="metadata_id_seq" startValue="1"/>
      <sequence increment="1" name="observation_id_seq" startValue="1"/>
      <sequence increment="1" name="project_id_seq" startValue="1"/>
      <sequence increment="1" name="project_view_id_seq" startValue="1"/>
      <sequence increment="1" name="protocol_id_seq" startValue="1"/>
      <sequence increment="1" name="series_id_seq" startValue="1"/>
      <sequence increment="1" name="spatial_layer_id_seq" startValue="1"/>
      <sequence increment="1" name="spatial_object_id_seq" startValue="1"/>
   </sequences>
   <tables>
      <table name="actor" numRows="0" remarks="Actors" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.actor_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4">
            <child column="fk_id_actor" foreignKey="series_fk_id_actor_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="series"/>
            <child column="fk_id_actor" foreignKey="spatial_layer_fk_id_actor_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="spatial_layer"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="a_label" nullable="false" remarks="Name of the actor (can be a person or an entity)" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="a_description" nullable="false" remarks="Description of the actor" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="a_email" nullable="false" remarks="Email of the actor" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="id_category" nullable="false" remarks="Category of actor" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="actor_id_category_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="actor_category"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="a_login" nullable="true" remarks="Login of the actor. It is the unique identifier of the actor. Only needed for actors having the category 'platform_user'." size="2147483647" type="text" typeCode="12"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="actor_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="actor_a_login_key" unique="true">
            <column ascending="true" name="a_login"/>
         </index>
         <index name="actor_a_name_idx" unique="false">
            <column ascending="true" name="a_label"/>
         </index>
      </table>
      <table name="actor_category" numRows="0" remarks="Actors categories" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.actor_category_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4">
            <child column="id_category" foreignKey="actor_id_category_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="actor"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="ac_label" nullable="false" remarks="Name of the actor category" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="ac_description" nullable="false" remarks="Description of the actor category" size="2147483647" type="text" typeCode="12"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="actor_category_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="actor_category_ac_label_key" unique="true">
            <column ascending="true" name="ac_label"/>
         </index>
      </table>
      <table name="deleted_data_log" numRows="0" remarks="Log of deleted objects from observation table. Use for synchronization purpose" schema="gobs" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="de_table" nullable="false" remarks="Source table of the deleted object: observation" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="de_uid" nullable="false" remarks="Unique text identifier of the object. Observation: ob_uid" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="2" name="de_timestamp" nullable="false" remarks="Timestamp of the deletion" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="de_table" sequenceNumberInPK="1"/>
         <primaryKey column="de_uid" sequenceNumberInPK="2"/>
         <index name="deleted_data_log_pkey" unique="true">
            <column ascending="true" name="de_table"/>
            <column ascending="true" name="de_uid"/>
         </index>
      </table>
      <table name="dimension" numRows="0" remarks="Stores the different dimensions characteristics of an indicator" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.dimension_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="" size="10" type="serial" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="fk_id_indicator" nullable="false" remarks="Id of the corresponding indicator." size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="dimension_fk_id_indicator_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="indicator"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="di_code" nullable="false" remarks="Code of the vector dimension. Ex: 'pop_h' or 'pop_f'" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="di_label" nullable="false" remarks="Label of the vector dimensions. Ex: 'population homme' or 'population femme'" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="di_type" nullable="false" remarks="Type of the stored values. Ex: 'integer' or 'real'" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="di_unit" nullable="true" remarks="Unit ot the store values. Ex: 'inhabitants' or 'Â°C'" size="2147483647" type="text" typeCode="12"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="dimension_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="dimension_fk_id_indicator_di_code_key" unique="true">
            <column ascending="true" name="fk_id_indicator"/>
            <column ascending="true" name="di_code"/>
         </index>
      </table>
      <table name="document" numRows="0" remarks="List of documents for describing indicators." schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.document_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4"/>
         <column autoUpdated="false" defaultValue="uuid_generate_v4()" digits="0" id="1" name="do_uid" nullable="false" remarks="Document uid: autogenerated unique identifier" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="do_label" nullable="false" remarks="Label of the document, used for display. Must be unique" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="do_description" nullable="true" remarks="Description of the document" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="do_type" nullable="false" remarks="Type of the document" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="do_path" nullable="false" remarks="Relative path of the document to the project storage. Ex: media/indicator/documents/indicator_weather_status_description.pdf" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="fk_id_indicator" nullable="true" remarks="Indicator id" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="document_fk_id_indicator_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="indicator"/>
         </column>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="7" name="created_at" nullable="false" remarks="Creation timestamp" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="8" name="updated_at" nullable="false" remarks="Last updated timestamp" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="document_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="document_do_label_key" unique="true">
            <column ascending="true" name="do_label"/>
            <column ascending="true" name="fk_id_indicator"/>
         </index>
      </table>
      <table name="glossary" numRows="0" remarks="List of labels and words used as labels for stored data" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.glossary_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="gl_field" nullable="false" remarks="Target field for this glossary item" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="gl_code" nullable="false" remarks="Item code to store in tables" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="gl_label" nullable="false" remarks="Item label to show for users" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="gl_description" nullable="false" remarks="Description of the item" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="gl_order" nullable="true" remarks="Display order among the field items" size="5" type="int2" typeCode="5"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="glossary_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="glossary_gl_field_idx" unique="false">
            <column ascending="true" name="gl_field"/>
         </index>
      </table>
      <table name="graph_node" numRows="0" remarks="Graph nodes, to store key words used to find an indicator." schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.graph_node_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4">
            <child column="fk_id_node" foreignKey="r_indicator_node_fk_id_node_fkey" implied="false" onDeleteCascade="true" schema="gobs" table="r_indicator_node"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="gn_label" nullable="false" remarks="Name of the node" size="2147483647" type="text" typeCode="12"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="graph_node_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="graph_node_gn_name_idx" unique="false">
            <column ascending="true" name="gn_label"/>
         </index>
         <index name="graph_node_gn_name_unique" unique="true">
            <column ascending="true" name="gn_label"/>
         </index>
      </table>
      <table name="import" numRows="0" remarks="Journal des imports" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.import_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="Id" size="10" type="serial" typeCode="4">
            <child column="fk_id_import" foreignKey="observation_fk_id_import_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="observation"/>
         </column>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="1" name="im_timestamp" nullable="false" remarks="Import date" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="fk_id_series" nullable="false" remarks="Series ID" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="import_fk_id_series_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="series"/>
         </column>
         <column autoUpdated="false" defaultValue="'p'::text" digits="0" id="3" name="im_status" nullable="true" remarks="Status of importÂ : pending, validated" size="2147483647" type="text" typeCode="12"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="import_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="import_fk_id_series_idx" unique="false">
            <column ascending="true" name="fk_id_series"/>
         </index>
      </table>
      <table name="indicator" numRows="0" remarks="Groups of observation data for decisional purpose." schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.indicator_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4">
            <child column="fk_id_indicator" foreignKey="dimension_fk_id_indicator_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="dimension"/>
            <child column="fk_id_indicator" foreignKey="document_fk_id_indicator_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="document"/>
            <child column="fk_id_indicator" foreignKey="r_indicator_node_fk_id_indicator_fkey" implied="false" onDeleteCascade="true" schema="gobs" table="r_indicator_node"/>
            <child column="fk_id_indicator" foreignKey="series_fk_id_indicator_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="series"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="id_code" nullable="false" remarks="Short name" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="id_label" nullable="false" remarks="Title" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="id_description" nullable="false" remarks="Describes the indicator regarding its rÃ´le inside the project." size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="'day'::text" digits="0" id="4" name="id_date_format" nullable="false" remarks="Help to know what is the format for the date. ExampleÂ : âyearâ" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="id_paths" nullable="true" remarks="Paths given to help finding an indicator. They will be split up to fill the graph_node and r_indicator_node tables. If you need multiple paths, use | as a separator. Ex: Environment / Water resources | Measure / Physics / Water" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="id_category" nullable="true" remarks="Category of the indicator. Used to group several indicators by themes." size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="7" name="created_at" nullable="false" remarks="Creation timestamp" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="8" name="updated_at" nullable="false" remarks="Last updated timestamp" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="indicator_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="indicator_id_label_idx" unique="false">
            <column ascending="true" name="id_code"/>
         </index>
      </table>
      <table name="metadata" numRows="0" remarks="Metadata of the structure : version and date. Usefull for database structure and glossary data migrations between versions" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.metadata_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="Id of the version" size="10" type="serial" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="me_version" nullable="false" remarks="Version. Ex: 1.0.2" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="me_version_date" nullable="false" remarks="Date of the version. Ex: 2019-06-01" size="13" type="date" typeCode="91"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="me_status" nullable="false" remarks="Status of the version. 1 means active version, 0 means older version" size="5" type="int2" typeCode="5"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="metadata_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="metadata_me_version_key" unique="true">
            <column ascending="true" name="me_version"/>
         </index>
      </table>
      <table name="observation" numRows="0" remarks="Les donnÃ©es brutes au format pivot ( indicateur, date, valeurs et entitÃ© spatiale, auteur, etc.)" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.observation_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="fk_id_series" nullable="false" remarks="Series ID" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="observation_fk_id_series_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="series"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="fk_id_spatial_object" nullable="false" remarks="ID of the object in the spatial object table" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="observation_fk_id_spatial_object_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="spatial_object"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="fk_id_import" nullable="false" remarks="Import id" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="observation_fk_id_import_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="import"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="ob_value" nullable="false" remarks="Vector containing the measured or computed data values. ExÂ : [1543, 1637]" size="2147483647" type="jsonb" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="ob_start_timestamp" nullable="false" remarks="Start timestamp of the observation data" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="ob_validation" nullable="true" remarks="Date and time when the data has been validated (the corresponding import status has been changed from pending to validated). Can be used to find all observations not yet validated, with NULL values in this field." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="ob_end_timestamp" nullable="true" remarks="End timestamp of the observation data (optional)" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="uuid_generate_v4()" digits="0" id="8" name="ob_uid" nullable="false" remarks="Observation uid: autogenerated unique identifier" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="9" name="created_at" nullable="false" remarks="Creation timestamp" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="10" name="updated_at" nullable="false" remarks="Last updated timestamp" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="observation_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="observation_data_unique" unique="true">
            <column ascending="true" name="fk_id_series"/>
            <column ascending="true" name="fk_id_spatial_object"/>
            <column ascending="true" name="ob_start_timestamp"/>
         </index>
         <index name="observation_fk_id_import_idx" unique="false">
            <column ascending="true" name="fk_id_import"/>
         </index>
         <index name="observation_fk_id_series_idx" unique="false">
            <column ascending="true" name="fk_id_series"/>
         </index>
         <index name="observation_fk_id_spatial_object_idx" unique="false">
            <column ascending="true" name="fk_id_spatial_object"/>
         </index>
         <index name="observation_ob_timestamp_idx" unique="false">
            <column ascending="true" name="ob_start_timestamp"/>
         </index>
      </table>
      <table name="project" numRows="0" remarks="List of projects, which represents a group of indicators" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.project_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="Unique identifier" size="10" type="serial" typeCode="4">
            <child column="fk_id_project" foreignKey="project_view_fk_id_project_fkey" implied="false" onDeleteCascade="true" schema="gobs" table="project_view"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="pt_code" nullable="false" remarks="Project code. Ex: weather_data" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="pt_lizmap_project_key" nullable="true" remarks="Lizmap project unique identifier (optional): repository_code~project_file_name. Ex: environment~weather" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="pt_label" nullable="false" remarks="Human readable label of the project. Ex: Weather data publication" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="pt_description" nullable="true" remarks="Description of the project." size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="pt_indicator_codes" nullable="true" remarks="List of indicator codes available for this project" size="2147483647" type="_text" typeCode="2003"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="project_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="project_pt_code_key" unique="true">
            <column ascending="true" name="pt_code"/>
         </index>
         <index name="project_pt_label_key" unique="true">
            <column ascending="true" name="pt_label"/>
         </index>
      </table>
      <table name="project_view" numRows="0" remarks="Allow to filter the access on projects and relative data (indicators, observations, etc.) with a spatial object for a given list of user groups.&#10;There must be at least one project view for the project, of type global. The other views must be of type filter." schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.project_view_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="Unique identifier" size="10" type="serial" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="pv_label" nullable="false" remarks="Label of the project view" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="fk_id_project" nullable="false" remarks="Project id (foreign key)" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="project_view_fk_id_project_fkey" implied="false" onDeleteCascade="true" schema="gobs" table="project"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="pv_groups" nullable="true" remarks="List of user groups allowed to see observation data inside this project view spatial layer object. Use a coma separated value. Ex: &quot;group_a, group_b&quot;" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="'global'::text" digits="0" id="4" name="pv_type" nullable="false" remarks="Type of the project view : &quot;global&quot; for the unique global view, and &quot;filter&quot; for the view made for spatial filter purpose" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="geom" nullable="false" remarks="Geometry of the project view: no observation can be created outside the project views geometries accessible from the authenticated user." size="2147483647" type="geometry" typeCode="1111"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="project_view_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
      </table>
      <table name="protocol" numRows="0" remarks="List of protocols" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.protocol_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4">
            <child column="fk_id_protocol" foreignKey="series_fk_id_protocol_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="series"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="pr_code" nullable="false" remarks="Code" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="pr_label" nullable="false" remarks="Name of the indicator" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="pr_description" nullable="false" remarks="Description, including URLs to references and authors." size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="30" digits="0" id="4" name="pr_days_editable" nullable="false" remarks="Number of days the observations from series related to the protocol are editable (delete &amp; update) after creation.&#10;Use a very long value such as 10000 if the editing can occur at any time.&#10;The control is made based on the observation created_at column" size="10" type="int4" typeCode="4"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="protocol_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="protocol_pr_code_idx" unique="false">
            <column ascending="true" name="pr_code"/>
         </index>
      </table>
      <table name="r_graph_edge" numRows="0" remarks="Graph edges: relations between nodes" schema="gobs" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="ge_parent_node" nullable="false" remarks="Parent node" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="ge_child_node" nullable="false" remarks="Child node" size="10" type="int4" typeCode="4"/>
         <primaryKey column="ge_parent_node" sequenceNumberInPK="1"/>
         <primaryKey column="ge_child_node" sequenceNumberInPK="2"/>
         <index name="r_graph_edge_pkey" unique="true">
            <column ascending="true" name="ge_parent_node"/>
            <column ascending="true" name="ge_child_node"/>
         </index>
      </table>
      <table name="r_indicator_node" numRows="0" remarks="Pivot table between indicators and nodes" schema="gobs" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="fk_id_indicator" nullable="false" remarks="Parent indicator" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="r_indicator_node_fk_id_indicator_fkey" implied="false" onDeleteCascade="true" schema="gobs" table="indicator"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="fk_id_node" nullable="false" remarks="Parent node" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="r_indicator_node_fk_id_node_fkey" implied="false" onDeleteCascade="true" schema="gobs" table="graph_node"/>
         </column>
         <primaryKey column="fk_id_indicator" sequenceNumberInPK="1"/>
         <primaryKey column="fk_id_node" sequenceNumberInPK="2"/>
         <index name="r_indicator_node_pkey" unique="true">
            <column ascending="true" name="fk_id_indicator"/>
            <column ascending="true" name="fk_id_node"/>
         </index>
      </table>
      <table name="series" numRows="0" remarks="Series of data" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.series_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="Id" size="10" type="serial" typeCode="4">
            <child column="fk_id_series" foreignKey="import_fk_id_series_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="import"/>
            <child column="fk_id_series" foreignKey="observation_fk_id_series_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="observation"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="fk_id_protocol" nullable="false" remarks="Protocol" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="series_fk_id_protocol_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="protocol"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="fk_id_actor" nullable="false" remarks="Actor, source of the observation data." size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="series_fk_id_actor_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="actor"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="fk_id_indicator" nullable="false" remarks="Indicator. The series is named after the indicator." size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="series_fk_id_indicator_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="indicator"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="fk_id_spatial_layer" nullable="false" remarks="Spatial layer, mandatory. If needed, use a global spatial layer with only 1 object representing the global area." size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="series_fk_id_spatial_layer_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="spatial_layer"/>
         </column>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="series_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="series_fk_id_actor_idx" unique="false">
            <column ascending="true" name="fk_id_actor"/>
         </index>
         <index name="series_fk_id_indicator_idx" unique="false">
            <column ascending="true" name="fk_id_indicator"/>
         </index>
         <index name="series_fk_id_protocol_idx" unique="false">
            <column ascending="true" name="fk_id_protocol"/>
         </index>
         <index name="series_fk_id_spatial_layer_idx" unique="false">
            <column ascending="true" name="fk_id_spatial_layer"/>
         </index>
      </table>
      <table name="spatial_layer" numRows="0" remarks="List the spatial layers, used to regroup the spatial data. ExÂ : cities, rivers, stations" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.spatial_layer_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="" size="10" type="serial" typeCode="4">
            <child column="fk_id_spatial_layer" foreignKey="series_fk_id_spatial_layer_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="series"/>
            <child column="fk_id_spatial_layer" foreignKey="spatial_object_fk_id_spatial_layer_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="spatial_object"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="sl_code" nullable="false" remarks="Unique short code for the spatial layer" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="sl_label" nullable="false" remarks="Label of the spatial layer" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="sl_description" nullable="false" remarks="Description" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="(now())::date" digits="0" id="4" name="sl_creation_date" nullable="false" remarks="Creation date" size="13" type="date" typeCode="91"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="fk_id_actor" nullable="false" remarks="Source actor." size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="spatial_layer_fk_id_actor_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="actor"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="sl_geometry_type" nullable="false" remarks="Type of geometry (POINT, POLYGON, MULTIPOLYGON, etc.)" size="2147483647" type="text" typeCode="12"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="spatial_layer_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="spatial_layer_sl_code_idx" unique="false">
            <column ascending="true" name="sl_code"/>
         </index>
      </table>
      <table name="spatial_object" numRows="0" remarks="Contains all the spatial objects, caracterized by a geometry type and an entity" schema="gobs" type="TABLE">
         <column autoUpdated="true" defaultValue="nextval('gobs.spatial_object_id_seq'::regclass)" digits="0" id="0" name="id" nullable="false" remarks="ID" size="10" type="serial" typeCode="4">
            <child column="fk_id_spatial_object" foreignKey="observation_fk_id_spatial_object_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="observation"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="so_unique_id" nullable="false" remarks="Unique code of each object in the spatial layer ( INSEE, tag, etc.)" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="so_unique_label" nullable="false" remarks="Label of each spatial object. ExÂ : name of the city." size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="geom" nullable="false" remarks="Geometry of the spatial object. Alway in EPSG:4326" size="2147483647" type="geometry" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="fk_id_spatial_layer" nullable="false" remarks="Spatial layer" size="10" type="int4" typeCode="4">
            <parent column="id" foreignKey="spatial_object_fk_id_spatial_layer_fkey" implied="false" onDeleteCascade="false" schema="gobs" table="spatial_layer"/>
         </column>
         <column autoUpdated="false" defaultValue="(now())::date" digits="0" id="5" name="so_valid_from" nullable="false" remarks="Date from which the spatial object is valid." size="13" type="date" typeCode="91"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="so_valid_to" nullable="true" remarks="Date from which the spatial object is not valid. Optional: if not given, the spatial object is always valid" size="13" type="date" typeCode="91"/>
         <column autoUpdated="false" defaultValue="uuid_generate_v4()" digits="0" id="7" name="so_uid" nullable="false" remarks="Spatial object uid: autogenerated unique identifier" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="8" name="created_at" nullable="false" remarks="Creation timestamp" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="9" name="updated_at" nullable="false" remarks="Last updated timestamp" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="id" sequenceNumberInPK="1"/>
         <index name="spatial_object_pkey" unique="true">
            <column ascending="true" name="id"/>
         </index>
         <index name="spatial_object_fk_id_spatial_layer_idx" unique="false">
            <column ascending="true" name="fk_id_spatial_layer"/>
         </index>
         <index name="spatial_object_geom_idx" unique="false">
            <column ascending="true" name="geom"/>
         </index>
         <index name="spatial_object_unique_key" unique="true">
            <column ascending="true" name="so_unique_id"/>
            <column ascending="true" name="fk_id_spatial_layer"/>
            <column ascending="true" name="so_valid_from"/>
         </index>
      </table>
   </tables>
   <routines>
      <routine dataAccess="MODIFIES" deterministic="false" name="control_observation_editing_capability()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    maximum_duration integer;
    observation_ok boolean;
    can_edit_protocol boolean;
BEGIN
    -- Do nothing for creation
    IF TG_OP = 'INSERT' THEN
        RETURN NEW;
    END IF;

    -- If the current user has the right to edit the protocol, do not restrict editing
    can_edit_protocol = (
        SELECT (count(*) > 0)
        FROM information_schema.role_table_grants
        WHERE grantee = current_role
        AND table_schema = 'gobs'
        AND table_name = 'protocol'
        AND privilege_type IN ('UPDATE', 'INSERT')
    );
    IF can_edit_protocol THEN
        IF TG_OP = 'DELETE' THEN
            RETURN OLD;
        ELSE
            RETURN NEW;
        END IF;
    END IF;

    -- Get the protocol delay
    maximum_duration := (
        SELECT pr_days_editable
        FROM gobs.protocol
        WHERE id IN (
            SELECT fk_id_protocol
            FROM gobs.series
            WHERE id = NEW.fk_id_series
        )
        LIMIT 1
    );

    -- Check the observation created_at timestamp agains the maximum duration in days
    observation_ok = ((now() - NEW.created_at) < (concat(maximum_duration, ' days'))::interval);

    IF NOT observation_ok THEN
        -- On renvoie une erreur
        RAISE EXCEPTION 'The given observation cannot be edited since it is older than the delay defined in its related series protocol';
    END IF;

    -- If no problem occured, return the record
    IF TG_OP = 'DELETE' THEN
        RETURN OLD;
    ELSE
        RETURN NEW;
    END IF;
END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="find_observation_with_wrong_spatial_object(_id_series integer)" returnType="TABLE(ob_uid uuid, so_unique_id text)" securityType="INVOKER" type="FUNCTION">
         <comment><![CDATA[Find the observations with having incompatible start and end timestamp with related spatial objects validity dates]]></comment>
         <definition language="plpgsql"><![CDATA[BEGIN
    RETURN QUERY
    SELECT
    o.ob_uid, s.so_unique_id
    FROM gobs.observation AS o
    INNER JOIN gobs.spatial_object AS s
        ON s.id = o.fk_id_spatial_object
    WHERE True
    -- the same series
    AND o.fk_id_series = _id_series
    -- wrong start (and optional end) dates compared to validity dates of linked spatial object
    AND (
            ob_start_timestamp
            NOT BETWEEN Coalesce('-infinity'::timestamp, so_valid_from) AND Coalesce(so_valid_to, 'infinity'::timestamp)
        OR
        (    ob_end_timestamp IS NOT NULL
            AND ob_end_timestamp
            NOT BETWEEN Coalesce('-infinity'::timestamp, so_valid_from) AND Coalesce(so_valid_to, 'infinity'::timestamp)
        )
    )
    ;

END;]]></definition>
         <parameters>
            <parameter mode="IN" name="_id_series" type="integer"/>
            <parameter mode="TABLE" name="ob_uid" type="uuid"/>
            <parameter mode="TABLE" name="so_unique_id" type="text"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="log_deleted_object()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    oid text;
BEGIN
    INSERT INTO gobs.deleted_data_log (
        de_table,
        de_uid,
        de_timestamp
    )
    VALUES (
        TG_TABLE_NAME::text,
        OLD.ob_uid,
        now()
    )
    ;
    RETURN OLD;
END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="manage_object_timestamps()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    nowtm timestamp;
BEGIN
    nowtm = now();
    IF TG_OP = 'INSERT' THEN
        NEW.created_at = nowtm;
        NEW.updated_at = nowtm;
    END IF;

    IF TG_OP = 'UPDATE' THEN
        NEW.updated_at = nowtm;
    END IF;

    RETURN NEW;
END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="parse_indicator_paths(i_id integer, i_path text)" returnType="integer" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    _path text;
    _group text;
    _word text;
    _parent text;
    _gid integer;
    _leaf text;
    _leaves text[];
BEGIN
    _parent = NULL;

    -- PARSE PATHS
    -- Insert root
    INSERT INTO gobs.graph_node (gn_label)
    VALUES ('ROOT')
    ON CONFLICT DO NOTHING;

    -- Explode path
    FOR _group IN
        SELECT trim(g)
        FROM regexp_split_to_table(i_path, ',') AS g
    LOOP
        RAISE NOTICE 'groupe = "%" ', _group;
        -- Explode group
        FOR _word IN
            SELECT trim(w) AS w
            FROM regexp_split_to_table(_group, '/') AS w
        LOOP
            RAISE NOTICE '  * word = "%", parent = "%" ', _word, _parent;

            -- gobs.graph_node
            INSERT INTO gobs.graph_node (gn_label)
            VALUES (_word)
            ON CONFLICT (gn_label)
            DO NOTHING
            RETURNING id
            INTO _gid;
            IF _gid IS NULL THEN
                SELECT id INTO _gid
                FROM gobs.graph_node
                WHERE gn_label = _word;
            END IF;

            -- gobs.r_graph_edge
            INSERT INTO gobs.r_graph_edge (ge_parent_node, ge_child_node)
            VALUES (
                (SELECT id FROM gobs.graph_node WHERE gn_label = coalesce(_parent, 'ROOT') LIMIT 1),
                _gid
            )
            ON CONFLICT DO NOTHING;

            -- Change parent with current word -> Next will have it as parent
            _parent =  _word;

            -- store leaf
            _leaf = _word;

        END LOOP;
        -- Put back parent to NULL -> next will start with ROOT
        _parent =  NULL;

        -- Add leaf to leaves
        _leaves = _leaves || _leaf ;
        _leaf = NULL;
    END LOOP;

    -- Add leaves to r_indicator_node
    RAISE NOTICE '  leaves % ', _leaves;

    INSERT INTO gobs.r_indicator_node
    (fk_id_indicator, fk_id_node)
    SELECT i_id, (
        SELECT id FROM gobs.graph_node WHERE gn_label = leaf LIMIT 1
    )
    FROM (
        SELECT unnest(_leaves) AS leaf
    ) AS source
    ON CONFLICT DO NOTHING;

    RETURN 1;
END;]]></definition>
         <parameters>
            <parameter mode="IN" name="i_id" type="integer"/>
            <parameter mode="IN" name="i_path" type="text"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="trg_after_import_validation()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    _output integer;
BEGIN
    IF TG_OP = 'UPDATE' AND NEW.im_status = 'V' AND NEW.im_status != OLD.im_status THEN
        UPDATE gobs.observation
        SET ob_validation = now()
        WHERE TRUE
        AND fk_id_import = NEW.id
        ;
    END IF;

    RETURN NEW;
END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="trg_parse_indicator_paths()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    _output integer;
BEGIN
    IF TG_OP = 'INSERT' OR NEW.id_paths != OLD.id_paths THEN
        SELECT gobs.parse_indicator_paths(NEW.id, NEW.id_paths)
        INTO _output;
    END IF;

    RETURN NEW;
END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="update_observation_on_spatial_object_change()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[BEGIN
    IF TG_OP = 'UPDATE' AND NOT ST_Equals(NEW.geom, OLD.geom) THEN
        UPDATE gobs.observation
        SET updated_at = now()
        WHERE fk_id_spatial_object = NEW.id
        ;
    END IF;

    RETURN NEW;
END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="update_observations_with_wrong_spatial_objects(_id_series integer)" returnType="TABLE(modified_obs_count integer, remaining_obs_count integer)" securityType="INVOKER" type="FUNCTION">
         <comment><![CDATA[Update observations with wrong spatial objects: it search the observation for which the start and end timestamp does not match anymore the related spatial objects validity dates. It gets the correct one if possible and perform an UPDATE for these observations. It returns a line with 2 integer columns: modified_obs_count (number of modified observations) and remaining_obs_count (number of observations still with wrong observations]]></comment>
         <definition language="plpgsql"><![CDATA[DECLARE
    modified_count integer;
    remaining_count integer;
BEGIN

-- Update the observations
WITH problem AS (
    SELECT *
    FROM gobs.find_observation_with_wrong_spatial_object(_id_series)
), solution AS (
    SELECT
    o.ob_uid, so.id AS new_id
    FROM
        gobs.observation AS o,
        problem AS p,
        gobs.spatial_object AS so
    WHERE True
    -- same unique id as problematic
    AND p.so_unique_id = so.so_unique_id
    -- not itself
    AND True
    -- problematic only
    AND p.ob_uid = o.ob_uid
    -- same series
    AND o.fk_id_series = _id_series
    -- same spatial layer
    AND so.fk_id_spatial_layer IN (
        SELECT fk_id_spatial_layer
        FROM gobs.series
        WHERE id = _id_series
    )
    -- compatible dates
    AND
        ob_start_timestamp
        BETWEEN Coalesce(so.so_valid_from, '-infinity'::timestamp) AND Coalesce(so.so_valid_to, 'infinity'::timestamp)
    AND (
        ob_end_timestamp IS NULL
        OR
        (    ob_end_timestamp IS NOT NULL
            AND ob_end_timestamp
            BETWEEN Coalesce(so_valid_from, '-infinity'::timestamp) AND Coalesce(so_valid_to, 'infinity'::timestamp)
        )
    )
)
UPDATE gobs.observation oo
SET fk_id_spatial_object = s.new_id
FROM solution AS s
WHERE oo.ob_uid = s.ob_uid
;

-- Get the number of rows updated
GET DIAGNOSTICS modified_count = ROW_COUNT;

-- Check if there is anything remaining
-- for example if no new id have been found to replace the wrong ones
SELECT count(*)
FROM gobs.find_observation_with_wrong_spatial_object(_id_series)
INTO remaining_count;

RETURN QUERY SELECT modified_count, remaining_count;

END;]]></definition>
         <parameters>
            <parameter mode="IN" name="_id_series" type="integer"/>
            <parameter mode="TABLE" name="modified_obs_count" type="integer"/>
            <parameter mode="TABLE" name="remaining_obs_count" type="integer"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="update_spatial_object_end_validity()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    nowtm timestamp;
    last_id integer;
BEGIN
    last_id = 0;
    IF TG_OP = 'INSERT' THEN

        -- Get the last corresponding item
        SELECT INTO last_id
        so.id
        FROM gobs.spatial_object so
        WHERE TRUE
        -- do not modify if there is already a value
        AND so.so_valid_to IS NULL
        -- only for same spatial layer
        AND so.fk_id_spatial_layer = NEW.fk_id_spatial_layer
        -- and same unique id ex: code insee
        AND so.so_unique_id = NEW.so_unique_id
        -- and not for the same object
        AND so.so_uid != NEW.so_uid
        -- only if the new object has a start validity date AFTER the existing one
        AND so.so_valid_from < NEW.so_valid_from
        -- only the preceding one
        ORDER BY so_valid_from DESC
        LIMIT 1
        ;

        -- Update it
        IF last_id > 0 THEN
            UPDATE gobs.spatial_object so
            SET so_valid_to = NEW.so_valid_from
            WHERE so.id = last_id
            ;
        END IF;

    END IF;

    RETURN NEW;
END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
   </routines>
</database>
